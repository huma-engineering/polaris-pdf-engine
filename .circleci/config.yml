ACR_DOCKER_AUTH_MASTER: &ACR_DOCKER_AUTH
  image: ${AZURE_LOGIN_SERVER_NAME}/she/circleci-build-image
  auth:
    username: ${ACR_REGISTRY_NAME}
    password: ${ACR_PASSWORD}

DOCKER_BUILD_AND_PUSH_PARAMETERS_MASTER: &DOCKER_BUILD_AND_PUSH_PARAMETERS
  image: ${ACR_REPO_BASE}/dhos-pdf-engine
  registry: ${AZURE_LOGIN_SERVER_NAME}
  tag: dev,cb-${CIRCLE_BUILD_NUM},$(git log --pretty=format:'%h' -n 1)


version: 2.1
orbs:
  azure-acr: circleci/azure-acr@0.1.4
  docker: circleci/docker@2.2.0
commands:
  acr-login:
    description: Authenticate into Azure Container Registry service
    steps:
      - run:
          name: Auth with ACR
          command: az acr login -n $ACR_REGISTRY_NAME -u $AZURE_USERNAME -p $AZURE_PASSWORD
jobs:
  test:
    docker:
      - image: circleci/node:11.13.0
    environment:
      COVERAGE_REPORT_DIR: coverage-reports
      COVERAGE_REPORT_FILE: lcov.info
    steps:
      - checkout
      - run:
          name: Create coverage report dir
          command: mkdir -p ${COVERAGE_REPORT_DIR}
      - restore_cache:
          keys:
            - v1-yarn-deps-{{ checksum "yarn.lock" }}
            - v1-yarn-deps-
      - run:
          name: Set up yarn tests
          command: yarn install --frozen-lockfile
      - run:
          name: Run yarn linter
          command: yarn lint
      - save_cache:
          key: v1-yarn-deps-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - run:
          name: Run yarn tests
          command: yarn test
      - persist_to_workspace:
          root: coverage-reports
          paths:
            - lcov.info
  deploy-dev:
    docker:
      - <<: *ACR_DOCKER_AUTH
    environment:
      K8S_DEV_CLUSTER_NAME: dh-local
      K8S_DEV_TAG: dev
      K8S_DEV_DEPLOYMENT_NAME: deploy/dhos-pdf-api-dep
      ACR_REPO_BASE: dhos
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
          version: 20.10.7
      - run:
          name: Add build information
          command: .circleci/record_build_info.sh
      - acr-login
      - docker/build:
          step-name: Build Docker image for ACR
          <<: *DOCKER_BUILD_AND_PUSH_PARAMETERS
      - docker/push:
          step-name: Push Docker image to ACR
          <<: *DOCKER_BUILD_AND_PUSH_PARAMETERS
workflows:
  version: 2
  build_test_deploy:
    jobs:
      - test:
          context: engineering-build
      - deploy-dev:
          context: engineering-build
          requires:
            - test
          filters:
            branches:
              only:
                - develop
